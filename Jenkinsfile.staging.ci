pipeline{
    agent any
    //  triggers {
    //     // Poll Repo B every 5 minutes
    //     pollSCM('H/5 * * * *')
    // }
    environment {
        DOCKERHUB_CREDENTIALS = 'dockerhub-token'        // Jenkins credentials ID
        IMAGE_NAME = 'nschiau/eventapp' // Replace with your Docker Hub repo
        IMAGE_TAG = ''
    }

    stages{
        stage("Fetch code"){
            steps{
                git branch: 'staging', url: 'https://github.com/nschiau/eventApp-backend.git' 
            }
        }

        stage('Restore') {
            steps {
                sh 'dotnet restore src/EventHorizon.Api/EventHorizon.Api.csproj'
            }
        }
        stage('Build') {
            steps {
                sh 'dotnet build --no-restore src/EventHorizon.Api/EventHorizon.Api.csproj --configuration Release'
            }
        }
        stage('Test') {
            steps {
                sh 'dotnet test --no-build --verbosity normal tests/EventHorizon.Api.Tests/EventHorizon.Api.Tests.csproj'
            }
        }

        stage('Deliver') { 
            steps {
                sh 'dotnet publish src/EventHorizon.Api/EventHorizon.Api.csproj --no-restore -c Release -o published'
            }
            post {
                success {
                    archiveArtifacts 'published/*.*' 
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    // Define your full image name (repo + tag)
                    def image = docker.build(
                        "nschiau/eventapp:${BUILD_NUMBER}",
                        "-f src/EventHorizon.Api/Dockerfile ."
                    )
                    IMAGE_TAG = image
                }
            }
        }

        stage('Push to Docker Hub') {
            steps {
                script {
                    docker.withRegistry( '', DOCKERHUB_CREDENTIALS ) {
                        IMAGE_TAG.push()
                    }
                }
            }
        }
    }
}